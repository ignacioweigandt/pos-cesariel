"""
Migraci√≥n: Agregar tabla system_config

Este script agrega la tabla system_config a una base de datos existente
sin afectar ninguna otra tabla o dato.

Uso:
    python migrate_system_config.py
"""

from database import SessionLocal, engine
from app.models.system_config import SystemConfig
from sqlalchemy import inspect
import sys


def table_exists(table_name):
    """Verificar si una tabla existe en la base de datos"""
    inspector = inspect(engine)
    return table_name in inspector.get_table_names()


def migrate_system_config():
    """Crear tabla system_config y agregar configuraci√≥n por defecto"""

    print("=" * 60)
    print("Migraci√≥n: Agregar tabla system_config")
    print("=" * 60)

    # Verificar si la tabla ya existe
    if table_exists('system_config'):
        print("‚úì La tabla 'system_config' ya existe")

        # Verificar si hay datos
        db = SessionLocal()
        try:
            config_count = db.query(SystemConfig).count()
            if config_count > 0:
                print(f"‚úì Ya existe configuraci√≥n ({config_count} registro(s))")
                print("\n‚úÖ No se requiere migraci√≥n")
                return True
            else:
                print("‚ö† La tabla existe pero est√° vac√≠a")
        except Exception as e:
            print(f"‚ö† Error verificando datos: {e}")
        finally:
            db.close()
    else:
        print("‚äï Creando tabla 'system_config'...")

        # Crear solo la tabla system_config
        try:
            SystemConfig.__table__.create(bind=engine, checkfirst=True)
            print("‚úì Tabla 'system_config' creada exitosamente")
        except Exception as e:
            print(f"‚ùå Error creando tabla: {e}")
            return False

    # Insertar configuraci√≥n por defecto
    print("\n‚äï Insertando configuraci√≥n por defecto...")
    db = SessionLocal()

    try:
        # Crear configuraci√≥n por defecto
        default_config = SystemConfig(
            default_currency="ARS",
            currency_symbol="$",
            currency_position="before",
            decimal_places=2,
            default_tax_rate=0,
            session_timeout=30
        )

        db.add(default_config)
        db.commit()
        db.refresh(default_config)

        print("‚úì Configuraci√≥n por defecto insertada:")
        print(f"  - Moneda: {default_config.default_currency}")
        print(f"  - S√≠mbolo: {default_config.currency_symbol}")
        print(f"  - Posici√≥n: {default_config.currency_position}")
        print(f"  - Decimales: {default_config.decimal_places}")
        print(f"  - ID: {default_config.id}")

        print("\n" + "=" * 60)
        print("‚úÖ Migraci√≥n completada exitosamente")
        print("=" * 60)
        print("\nüìã Pr√≥ximos pasos:")
        print("1. La configuraci√≥n de moneda ya est√° disponible")
        print("2. Puedes cambiarla desde Settings ‚Üí Currency en el frontend")
        print("3. O usando la API: PUT /config/currency")
        print("\nüí° Reinicia el frontend para que cargue la configuraci√≥n:")
        print("   make restart")

        return True

    except Exception as e:
        print(f"\n‚ùå Error insertando configuraci√≥n: {e}")
        db.rollback()
        return False

    finally:
        db.close()


if __name__ == "__main__":
    print("\nüöÄ Iniciando migraci√≥n...\n")

    try:
        success = migrate_system_config()
        sys.exit(0 if success else 1)
    except Exception as e:
        print(f"\n‚ùå Error inesperado: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)
